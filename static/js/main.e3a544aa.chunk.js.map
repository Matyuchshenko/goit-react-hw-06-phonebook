{"version":3,"sources":["components/ContactsList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactAdd","createAction","name","number","payload","id","uuidv4","contactDelete","filterChange","items","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","allContacts","allContact","toLowerCase","includes","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","resetForm","className","s","title","contactForm","onSubmit","preventDefault","length","alert","find","contact","htmlFor","type","placeholder","inputName","onChange","inputPhone","pattern","required","inputPhonePrompt","btnAdd","ContactList","listItems","map","item","onClick","removeContact","Filter","filterWrapper","inputFilter","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e3a544aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItems\":\"ContactList_listItems__3Mu-V\",\"item\":\"ContactList_item__1Y9PL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__PRUtY\",\"inputFilter\":\"Filter_inputFilter__1xfqM\"};","// export const contactAdd = value => ({\r\n//     type: 'contact/Add';\r\n//     payload: value;\r\n// });\r\n\r\n// export const contactDelate = id => ({\r\n//     type: 'contact/Delate';\r\n//     payload: id;\r\n// })\r\n\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst contactAdd = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\nconst contactDelete = createAction('contacts/delete');\r\nconst filterChange = createAction('contacts/change');\r\n\r\nexport default { contactAdd, contactDelete, filterChange };","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.contactAdd]: (state, { payload }) => [...state, payload],\r\n  [actions.contactDelete]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  \r\n  return allContacts.filter(allContact =>\r\n    allContact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport s from './ContactForm.module.css';\r\nimport { getContacts } from '../../redux/selectors';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (name.length === 0) {\r\n      alert('Some filed is empty');\r\n      return false;\r\n    }\r\n\r\n    const isExistContact = contacts.find(contact => contact.name === name);\r\n    if (isExistContact) {\r\n      alert(`${name} is already in contacts.`);\r\n      resetForm();\r\n      return;\r\n    }\r\n\r\n    return dispatch(actions.contactAdd(name, number), resetForm());\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={s.title}>Phonebook</h2>\r\n      <form className={s.contactForm} onSubmit={handleSubmit}>\r\n        <label htmlFor=\"new-name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"new-name\"\r\n          placeholder=\"Enter name\"\r\n          className={s.inputName}\r\n          onChange={handleChange}\r\n          value={name}\r\n        />\r\n        <label htmlFor=\"new-phone\">Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          id=\"new-phone\"\r\n          placeholder=\"Enter phone number\"\r\n          className={s.inputPhone}\r\n          onChange={handleChange}\r\n          value={number}\r\n          pattern=\"+-[0-9]{2}-[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n          required\r\n        />\r\n        <span className={s.inputPhonePrompt}>\r\n          Format phone number +00-000-000-00-00\r\n        </span>\r\n        <button className={s.btnAdd} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n      <h2 className={s.title}>Contacts</h2>\r\n    </div>\r\n  );\r\n}","import { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const removeContact = id => dispatch(actions.contactDelete(id));\r\n\r\n  return (\r\n    <ul className={s.listItems}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n           {name}: {number}\r\n          <button onClick={() => removeContact(id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","// const Filter = ({ filter, onChange }) => {\r\n//   return (\r\n//     <input\r\n//       type=\"text\"\r\n//       name=\"filter\"\r\n//       value={filter}\r\n//       onChange={({ target }) => onChange(target.value)}\r\n//       placeholder=\"Enter name for Search\"\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default Filter;\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport actions from '../../redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label htmlFor=\"filter-contact\">Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        id=\"filter-contact\"\r\n        placeholder=\"Enter name for search\"\r\n        className={s.inputFilter}\r\n        onChange={({ target }) =>\r\n          dispatch(actions.filterChange(target.value))\r\n        }\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__37ZQo\",\"contactForm\":\"ContactForm_contactForm__1fjgj\",\"inputName\":\"ContactForm_inputName__19svy\",\"inputPhone\":\"ContactForm_inputPhone__3i1_q\",\"inputPhonePrompt\":\"ContactForm_inputPhonePrompt__jU0GM\",\"btnAdd\":\"ContactForm_btnAdd__IvSry\"};"],"sourceRoot":""}